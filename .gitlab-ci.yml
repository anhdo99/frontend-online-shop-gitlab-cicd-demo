variables:
    PATH_PROJECT: "/home/${USER_PROJECT}/${CI_PROJECT_NAME}"
    USER_PROJECT: "onlineshop"
    IMAGE_VERSION: "${CI_REGISTRY}/${USER_PROJECT}/${CI_PROJECT_NAME}:${CI_COMMIT_TAG}"
    CODECLIMATE_FILE: "${CI_PROJECT_NAME}_${CI_COMMIT_TAG}_codeclimate"
    SNYK_FILE: "${CI_PROJECT_NAME}_${CI_COMMIT_TAG}_snyk"
    TRIVYFS_FILE: "trivyfs_scan_${CI_PROJECT_NAME}_${CI_COMMIT_TAG}_report"
    TRIVY_IMAGE_FILE: "trivy_image_scan_${CI_PROJECT_NAME}_${CI_COMMIT_TAG}_report"
    ARACHNI_WEBSITE_REPORT: :"arachni_website_scan_${CI_PROJECT_NAME}_${CI_COMMIT_TAG}_report"

stages:
    - build
    - test_source_code
    - security_scan_images
    - push
    - deploy
    - security_scan_website

build:
    stage: build
    variables:
        GIT_STRATERY: clone
    script:
        - docker build -t ${IMAGE_VERSION} .
    tags:
        - online-shop-runner-build-shell
    only:
        - tags

code_cli_mate_scan:
    stage: test_source_code
    variables:
        GIT_STRATERY: none
    script:
        - docker run --rm --env CODECLIMATE_CODE="$PWD" --volume "$PWD":/code --volume /var/run/docker.sock:/var/run/docker.sock --volume /tmp/cc:/tmp/cc codeclimate/codeclimate analyze -f html > $CODECLIMATE_FILE.html
    tags:
        - online-shop-runner-build-shell
    only:
        - tags
    artifacts:
        paths:
        - $CODECLIMATE_FILE.html
        expire_in: 1 day

snyk_scan:
    stage: test_source_code
    variables:
        GIT_STRATERY: clone
    script:
        - docker build --rm --network host --build-arg SNYK_AUTH_TOKEN=$SNYK_AUTH_TOKEN --build-arg OUTPUT_FILENAME=$SNYK_FILE -t $SNYK_FILE -f Dockerfile-snyk .
        - docker create --name $SNYK_FILE $SNYK_FILE
        - docker cp $SNYK_FILE:/app/$SNYK_FILE.html .
    tags:
        - online-shop-runner-build-shell
    only:
        - tags
    artifacts:
        paths:
        - $SNYK_FILE.html
        expire_in: 1 day

trivyfs_scan:
    stage: test_source_code
    variables:
        GIT_STRATERY: clone
    script:
        - docker run --rm -v $PWD:/${CI_PROJECT_NAME} -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy fs /${CI_PROJECT_NAME} --severity HIGH,CRITICAL --format template --template "@contrib/html.tpl" --output /${CI_PROJECT_NAME}/$TRIVYFS_FILE.html
    tags:
        - online-shop-runner-build-shell
    only:
        - tags
    artifacts:
        paths:
        - $TRIVYFS_FILE.html
        expire_in: 1 day

trivy_scan_images:
    stage: security_scan_images
    variables:
        GIT_STRATERY: none
    script:
        - docker run --rm -v $PWD:/${CI_PROJECT_NAME} -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy clean --all
        - docker run --rm -v $PWD:/${CI_PROJECT_NAME} -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image --format template --template "@contrib/html.tpl" --output /${CI_PROJECT_NAME}/$TRIVY_IMAGE_FILE.html $IMAGE_VERSION
    tags:
        - online-shop-runner-build-shell
    only:
        - tags
    artifacts:
        paths:
        - $TRIVY_IMAGE_FILE.html
        expire_in: 1 day

push:
    stage: push
    variables:
        GIT_STRATERY: none
    before_script:
        - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    script:
        - docker push $IMAGE_VERSION
    after_script:
        - docker logout $CI_REGISTRY   
    tags:
        - online-shop-runner-build-shell
    only:
        - tags

deploy:
    stage: deploy   
    variables:
        GIT_STRATERY: none
    before_script:
        - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    script: 
        - sudo su ${USER_PROJECT} -c "docker rm -f ${CI_PROJECT_NAME} || true"
        - docker pull $IMAGE_VERSION
        - sudo su ${USER_PROJECT} -c "docker run --name ${CI_PROJECT_NAME} -dp 80:80 ${IMAGE_VERSION}"
    after_script:
        - docker logout $CI_REGISTRY 
    tags:
        - online-shop-runner-dev-shell
    only:
        - tags

security_scan_website:
    stage: security_scan_website
    variables:
        GIT_STRATERY: none
    script:
        - docker run --rm -v /tmp/:/tmp/ devopseduvn/arachni:v1.4-0.5.10 bin/arachni --output-verbose --scope-include-subdomains $ADDRESS_FRONTEND --report-save-path=/tmp/$ARACHNI_WEBSITE_REPORT.afr /dev/null 2>&1
        - docker run --rm -v /tmp/:/tmp/ devopseduvn/arachni:v1.4-0.5.10 bin/arachni_reporter /tmp/$ARACHNI_WEBSITE_REPORT.afr --reporter=html:outfile=/tmp/$ARACHNI_WEBSITE_REPORT.html.zip
        - sudo chmod 777 /tmp/$ARACHNI_WEBSITE_REPORT.html.zip
        - cp /tmp/$ARACHNI_WEBSITE_REPORT.html.zip .
    tags:
        - online-shop-runner-dev-shell
    only:
        - tags   
    artifacts:
        paths:
        - $ARACHNI_WEBSITE_REPORT.html.zip
        expire_in: 1 day
